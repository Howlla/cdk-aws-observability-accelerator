apiVersion: v1
data:
  collector.yaml: "receivers:\n  prometheus:\n    config:\n      global:\n        scrape_interval:
    15s\n        scrape_timeout: 10s\n        external_labels:\n          cluster:
    \"single-new-eks-cost-monitoring-observability-accelerator\"\n      scrape_configs:\n
    \       - job_name: kubecost\n            honor_labels: true\n            scrape_interval:
    1m\n            scrape_timeout: 10s\n            metrics_path: /metrics\n            scheme:
    http\n            dns_sd_configs:\n            - names:\n              - dashboard.kubecost.avt.eks.aws.dev\n
    \             type: 'A'\n              port: 9003\n        \n        - job_name:
    'kubernetes-kubelet'\n          scheme: https\n          tls_config:\n            ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify:
    true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         kubernetes_sd_configs:\n          - role: node\n          relabel_configs:\n
    \         - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n
    \         - target_label: __address__\n            replacement: kubernetes.default.svc.cluster.local:443\n
    \         - source_labels: [__meta_kubernetes_node_name]\n            regex: (.+)\n
    \           target_label: __metrics_path__\n            replacement: /api/v1/nodes/$${1}/proxy/metrics\n
    \       - job_name: 'kubelet'\n          scheme: https\n          tls_config:\n
    \           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify:
    true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         kubernetes_sd_configs:\n          - role: node\n          relabel_configs:\n
    \         - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n
    \         - target_label: __address__\n            replacement: kubernetes.default.svc.cluster.local:443\n
    \         - source_labels: [__meta_kubernetes_node_name]\n            regex: (.+)\n
    \           target_label: __metrics_path__\n            replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor\n
    \       \n        - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus-node-exporter/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects:
    true\n          enable_http2: true\n          relabel_configs:\n          - source_labels:
    [job]\n            separator: ;\n            regex: (.*)\n            target_label:
    __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n
    \         - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n
    \           separator: ;\n            regex: (prometheus-node-exporter);true\n
    \           replacement: $$1\n            action: keep\n          - source_labels:
    [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http-metrics\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects:
    true\n          enable_http2: true\n          relabel_configs:\n          - source_labels:
    [job]\n            separator: ;\n            regex: (.*)\n            target_label:
    __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n
    \         - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n
    \           separator: ;\n            regex: (kube-prometheus-stack-prometheus);true\n
    \           replacement: $$1\n            action: keep\n          - source_labels:
    [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_self_monitor,
    __meta_kubernetes_service_labelpresent_self_monitor]\n            separator: ;\n
    \           regex: (true);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: http-web\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - separator:
    ;\n            regex: (.*)\n            target_label: endpoint\n            replacement:
    http-web\n            action: replace\n          - source_labels: [__address__]\n
    \           separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label:
    __tmp_hash\n            replacement: $$1\n            action: hashmod\n          -
    source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n
    \           replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n
    \           - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - default\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-operator/0\n          honor_labels:
    true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: https\n          tls_config:\n
    \           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify:
    true\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-operator);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: https\n            replacement: $$1\n
    \           action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - separator:
    ;\n            regex: (.*)\n            target_label: endpoint\n            replacement:
    https\n            action: replace\n          - source_labels: [__address__]\n
    \           separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label:
    __tmp_hash\n            replacement: $$1\n            action: hashmod\n          -
    source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n
    \           replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n
    \           - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - default\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-kubelet/2\n          honor_labels:
    true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics/probes\n          scheme: https\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \           insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2:
    true\n          relabel_configs:\n          - source_labels: [job]\n            separator:
    ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n
    \           separator: ;\n            regex: (kubelet);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app,
    __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex:
    (kubelet);true\n            replacement: $$1\n            action: keep\n          -
    source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: https-metrics\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: https-metrics\n            action: replace\n
    \         - source_labels: [__metrics_path__]\n            separator: ;\n            regex:
    (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__address__]\n            separator: ;\n
    \           regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n
    \           replacement: $$1\n            action: hashmod\n          - source_labels:
    [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement:
    $$1\n            action: keep\n          kubernetes_sd_configs:\n            -
    role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - kube-system\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-kubelet/1\n          honor_labels:
    true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics/cadvisor\n          scheme: https\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \           insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2:
    true\n          relabel_configs:\n          - source_labels: [job]\n            separator:
    ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n
    \           separator: ;\n            regex: (kubelet);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app,
    __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex:
    (kubelet);true\n            replacement: $$1\n            action: keep\n          -
    source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: https-metrics\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: https-metrics\n            action: replace\n
    \         - source_labels: [__metrics_path__]\n            separator: ;\n            regex:
    (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__address__]\n            separator: ;\n
    \           regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n
    \           replacement: $$1\n            action: hashmod\n          - source_labels:
    [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement:
    $$1\n            action: keep\n          kubernetes_sd_configs:\n            -
    role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - kube-system\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-kubelet/0\n          honor_labels:
    true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: https\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \           insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2:
    true\n          relabel_configs:\n          - source_labels: [job]\n            separator:
    ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n
    \           separator: ;\n            regex: (kubelet);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app,
    __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex:
    (kubelet);true\n            replacement: $$1\n            action: keep\n          -
    source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: https-metrics\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: https-metrics\n            action: replace\n
    \         - source_labels: [__metrics_path__]\n            separator: ;\n            regex:
    (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__address__]\n            separator: ;\n
    \           regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n
    \           replacement: $$1\n            action: hashmod\n          - source_labels:
    [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement:
    $$1\n            action: keep\n          kubernetes_sd_configs:\n            -
    role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - kube-system\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-kube-state-metrics/0\n          honor_labels:
    true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects:
    true\n          enable_http2: true\n          relabel_configs:\n          - source_labels:
    [job]\n            separator: ;\n            regex: (.*)\n            target_label:
    __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n
    \         - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_instance,
    __meta_kubernetes_service_labelpresent_app_kubernetes_io_instance]\n            separator:
    ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n
    \           action: keep\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name,
    __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n            separator:
    ;\n            regex: (kube-state-metrics);true\n            replacement: $$1\n
    \           action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http\n            replacement: $$1\n
    \           action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_app_kubernetes_io_name]\n            separator:
    ;\n            regex: (.+)\n            target_label: job\n            replacement:
    $$1\n            action: replace\n          - separator: ;\n            regex:
    (.*)\n            target_label: endpoint\n            replacement: http\n            action:
    replace\n          - source_labels: [__address__]\n            separator: ;\n
    \           regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n
    \           replacement: $$1\n            action: hashmod\n          - source_labels:
    [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement:
    $$1\n            action: keep\n          kubernetes_sd_configs:\n            -
    role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - default\n        - job_name:
    serviceMonitor/default/kube-prometheus-stack-kube-scheduler/0\n          honor_timestamps:
    true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path:
    /metrics\n          scheme: http\n          authorization:\n            type:
    Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-kube-scheduler);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http-metrics\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-proxy/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-kube-proxy);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http-metrics\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-etcd/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-kube-etcd);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http-metrics\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-controller-manager/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-kube-controller-manager);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release,
    __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex:
    (kube-prometheus-stack);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: http-metrics\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-coredns/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n
    \         - source_labels: [job]\n            separator: ;\n            regex:
    (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app,
    __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex:
    (kube-prometheus-stack-coredns);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: http-metrics\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: http-metrics\n            action: replace\n
    \         - source_labels: [__address__]\n            separator: ;\n            regex:
    (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              namespaces:\n                own_namespace: false\n                names:\n
    \               - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-apiserver/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: https\n          authorization:\n
    \           type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \         tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \           server_name: kubernetes\n          follow_redirects: true\n          enable_http2:
    true\n          relabel_configs:\n          - source_labels: [job]\n            separator:
    ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_component, __meta_kubernetes_service_labelpresent_component]\n
    \           separator: ;\n            regex: (kubernetes);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n
    \           separator: ;\n            regex: https\n            replacement: $$1\n
    \           action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_service_label_component]\n            separator: ;\n            regex:
    (.+)\n            target_label: job\n            replacement: $$1\n            action:
    replace\n          - separator: ;\n            regex: (.*)\n            target_label:
    endpoint\n            replacement: https\n            action: replace\n          -
    source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n
    \           modulus: 1\n            target_label: __tmp_hash\n            replacement:
    $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator:
    ;\n            regex: \"0\"\n            replacement: $$1\n            action:
    keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file:
    \"\"\n              follow_redirects: true\n              enable_http2: true\n
    \             namespaces:\n                own_namespace: false\n                names:\n
    \               - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-alertmanager/0\n
    \         honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout:
    10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects:
    true\n          enable_http2: true\n          relabel_configs:\n          - source_labels:
    [job]\n            separator: ;\n            regex: (.*)\n            target_label:
    __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n
    \         - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n
    \           separator: ;\n            regex: (kube-prometheus-stack-alertmanager);true\n
    \           replacement: $$1\n            action: keep\n          - source_labels:
    [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n
    \           separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement:
    $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_self_monitor,
    __meta_kubernetes_service_labelpresent_self_monitor]\n            separator: ;\n
    \           regex: (true);true\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator:
    ;\n            regex: http-web\n            replacement: $$1\n            action:
    keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Node;(.*)\n            target_label: node\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind,
    __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex:
    Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator:
    ;\n            regex: (.*)\n            target_label: namespace\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: service\n
    \           replacement: $$1\n            action: replace\n          - source_labels:
    [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n
    \           target_label: pod\n            replacement: $$1\n            action:
    replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator:
    ;\n            regex: (.*)\n            target_label: container\n            replacement:
    $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n
    \           separator: ;\n            regex: (.*)\n            target_label: job\n
    \           replacement: $$1\n            action: replace\n          - separator:
    ;\n            regex: (.*)\n            target_label: endpoint\n            replacement:
    http-web\n            action: replace\n          - source_labels: [__address__]\n
    \           separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label:
    __tmp_hash\n            replacement: $$1\n            action: hashmod\n          -
    source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n
    \           replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n
    \           - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects:
    true\n              enable_http2: true\n              namespaces:\n                own_namespace:
    false\n                names:\n                - default\n        - job_name:
    'kube-state-metrics'\n          static_configs:\n            - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']\n
    \       - job_name: 'node-exporter'\n          kubernetes_sd_configs:\n            -
    role: endpoints\n          ec2_sd_configs:\n          relabel_configs:\n            -
    source_labels: [ __address__ ]\n              action: keep\n              regex:
    '.*:9100$'\n            - action: replace\n              source_labels: [__meta_kubernetes_endpoint_node_name]\n
    \             target_label: nodename\n        \n\n        \n\n     \n  filelog:\n
    \   include: [ /var/log/pods/*/*/*.log ]\n    include_file_name: false\n    include_file_path:
    true\n    start_at: end\n    operators:\n      # Find out which format is used
    by kubernetes\n      - type: router\n        id: get-format\n        routes:\n
    \         - output: parser-docker\n            expr: 'body matches \"^\\\\{\"'\n
    \         - output: parser-crio\n            expr: 'body matches \"^[^ Z]+ \"'\n
    \         - output: parser-containerd\n            expr: 'body matches \"^[^ Z]+Z\"'\n
    \     # Parse CRI-O format\n      - type: regex_parser\n        id: parser-crio\n
    \       regex:\n          '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^
    ]*)\n          ?(?P<log>.*)$'\n        output: extract_metadata_from_filepath\n
    \       timestamp:\n          parse_from: attributes.time\n          layout_type:
    gotime\n          layout: '2006-01-02T15:04:05.999999999Z07:00'\n      # Parse
    CRI-Containerd format\n      - type: regex_parser\n        id: parser-containerd\n
    \       regex:\n          '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^
    ]*)\n          ?(?P<log>.*)$'\n        output: extract_metadata_from_filepath\n
    \       timestamp:\n          parse_from: attributes.time\n          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n
    \     # Parse Docker format\n      - type: json_parser\n        id: parser-docker\n
    \       output: extract_metadata_from_filepath\n        timestamp:\n          parse_from:
    attributes.time\n          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n      - type: move\n
    \       from: attributes.log\n        to: body\n      # Extract metadata from
    file path\n      - type: regex_parser\n        id: extract_metadata_from_filepath\n
    \       regex: '^.*\\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\\-]{36})\\/(?P<container_name>[^\\._]+)\\/(?P<restart_count>\\d+)\\.log$'\n
    \       parse_from: attributes[\"log.file.path\"]\n        cache:\n          size:
    128 # default maximum amount of Pods per Node is 110\n      # Rename attributes\n
    \     - type: move\n        from: attributes.stream\n        to: attributes[\"log.iostream\"]\n
    \     - type: move\n        from: attributes.container_name\n        to: resource[\"k8s.container.name\"]\n
    \     - type: move\n        from: attributes.namespace\n        to: resource[\"k8s.namespace.name\"]\n
    \     - type: move\n        from: attributes.pod_name\n        to: resource[\"k8s.pod.name\"]\n
    \     - type: move\n        from: attributes.restart_count\n        to: resource[\"k8s.container.restart_count\"]\n
    \     - type: move\n        from: attributes.uid\n        to: resource[\"k8s.pod.uid\"]\n\nprocessors:\n
    \ k8sattributes:\n  batch:\n\nexporters:\n  prometheusremotewrite:\n    endpoint:
    \"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-8432056a-f3e5-411e-a6ab-3c6d21b71270/api/v1/remote_write\"\n
    \   auth:\n      authenticator: sigv4auth\n  logging:\n    loglevel: info\n  awscloudwatchlogs:\n
    \   log_group_name: \"/aws/eks/costmonitoring/observability-amp-workspace\"\n
    \   log_stream_name: \"$NODE_NAME\"\n    region: \"us-west-2\"\n    log_retention:
    30\n    raw_log: false\nextensions:\n  sigv4auth:\n    region: \"us-west-2\"\n
    \   service: aps\n  health_check:\n  pprof:\n    endpoint: :1888\n  zpages:\n
    \   endpoint: :55679\nservice:\n  extensions: [pprof, zpages, health_check, sigv4auth]\n
    \ pipelines:\n    metrics:\n      receivers: [prometheus]\n      exporters: [logging,
    prometheusremotewrite]\n    logs:\n      receivers: [filelog]\n      processors:
    [batch,k8sattributes]\n      exporters: [awscloudwatchlogs]\n  telemetry:\n    metrics:\n
    \     address: 0.0.0.0:8888\n      level: basic\n"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"opentelemetry.io/v1alpha1","kind":"OpenTelemetryCollector","metadata":{"annotations":{},"labels":{"aws.cdk.eks/prune-c812b288c8c9222087922b1ab3c9aba798868b58a0":""},"name":"otel-collector-amp","namespace":"default"},"spec":{"config":"receivers:\n  prometheus:\n    config:\n      global:\n        scrape_interval: 15s\n        scrape_timeout: 10s\n        external_labels:\n          cluster: \"single-new-eks-cost-monitoring-observability-accelerator\"\n      scrape_configs:\n        - job_name: kubecost\n            honor_labels: true\n            scrape_interval: 1m\n            scrape_timeout: 10s\n            metrics_path: /metrics\n            scheme: http\n            dns_sd_configs:\n            - names:\n              - dashboard.kubecost.avt.eks.aws.dev\n              type: 'A'\n              port: 9003\n        \n        - job_name: 'kubernetes-kubelet'\n          scheme: https\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          kubernetes_sd_configs:\n          - role: node\n          relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n          - target_label: __address__\n            replacement: kubernetes.default.svc.cluster.local:443\n          - source_labels: [__meta_kubernetes_node_name]\n            regex: (.+)\n            target_label: __metrics_path__\n            replacement: /api/v1/nodes/$${1}/proxy/metrics\n        - job_name: 'kubelet'\n          scheme: https\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          kubernetes_sd_configs:\n          - role: node\n          relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n          - target_label: __address__\n            replacement: kubernetes.default.svc.cluster.local:443\n          - source_labels: [__meta_kubernetes_node_name]\n            regex: (.+)\n            target_label: __metrics_path__\n            replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor\n        \n        - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus-node-exporter/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (prometheus-node-exporter);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-prometheus);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_self_monitor, __meta_kubernetes_service_labelpresent_self_monitor]\n            separator: ;\n            regex: (true);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-web\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-web\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-operator/0\n          honor_labels: true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: https\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-operator);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: https\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: https\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/2\n          honor_labels: true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics/probes\n          scheme: https\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: https-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: https-metrics\n            action: replace\n          - source_labels: [__metrics_path__]\n            separator: ;\n            regex: (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/1\n          honor_labels: true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics/cadvisor\n          scheme: https\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: https-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: https-metrics\n            action: replace\n          - source_labels: [__metrics_path__]\n            separator: ;\n            regex: (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/0\n          honor_labels: true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: https\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]\n            separator: ;\n            regex: (kubelet);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: https-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_k8s_app]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: https-metrics\n            action: replace\n          - source_labels: [__metrics_path__]\n            separator: ;\n            regex: (.*)\n            target_label: metrics_path\n            replacement: $$1\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-state-metrics/0\n          honor_labels: true\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_instance, __meta_kubernetes_service_labelpresent_app_kubernetes_io_instance]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]\n            separator: ;\n            regex: (kube-state-metrics);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-scheduler/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-kube-scheduler);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-proxy/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-kube-proxy);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-etcd/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-kube-etcd);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-kube-controller-manager/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-kube-controller-manager);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-coredns/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-coredns);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-metrics\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_jobLabel]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-metrics\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              namespaces:\n                own_namespace: false\n                names:\n                - kube-system\n        - job_name: serviceMonitor/default/kube-prometheus-stack-apiserver/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: https\n          authorization:\n            type: Bearer\n            credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            server_name: kubernetes\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_component, __meta_kubernetes_service_labelpresent_component]\n            separator: ;\n            regex: (kubernetes);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: https\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_component]\n            separator: ;\n            regex: (.+)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: https\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: serviceMonitor/default/kube-prometheus-stack-alertmanager/0\n          honor_timestamps: true\n          scrape_interval: 30s\n          scrape_timeout: 10s\n          metrics_path: /metrics\n          scheme: http\n          follow_redirects: true\n          enable_http2: true\n          relabel_configs:\n          - source_labels: [job]\n            separator: ;\n            regex: (.*)\n            target_label: __tmp_prometheus_job_name\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]\n            separator: ;\n            regex: (kube-prometheus-stack-alertmanager);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]\n            separator: ;\n            regex: (kube-prometheus-stack);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_service_label_self_monitor, __meta_kubernetes_service_labelpresent_self_monitor]\n            separator: ;\n            regex: (true);true\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_port_name]\n            separator: ;\n            regex: http-web\n            replacement: $$1\n            action: keep\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Node;(.*)\n            target_label: node\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]\n            separator: ;\n            regex: Pod;(.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_namespace]\n            separator: ;\n            regex: (.*)\n            target_label: namespace\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: service\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_name]\n            separator: ;\n            regex: (.*)\n            target_label: pod\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_pod_container_name]\n            separator: ;\n            regex: (.*)\n            target_label: container\n            replacement: $$1\n            action: replace\n          - source_labels: [__meta_kubernetes_service_name]\n            separator: ;\n            regex: (.*)\n            target_label: job\n            replacement: $$1\n            action: replace\n          - separator: ;\n            regex: (.*)\n            target_label: endpoint\n            replacement: http-web\n            action: replace\n          - source_labels: [__address__]\n            separator: ;\n            regex: (.*)\n            modulus: 1\n            target_label: __tmp_hash\n            replacement: $$1\n            action: hashmod\n          - source_labels: [__tmp_hash]\n            separator: ;\n            regex: \"0\"\n            replacement: $$1\n            action: keep\n          kubernetes_sd_configs:\n            - role: endpoints\n              kubeconfig_file: \"\"\n              follow_redirects: true\n              enable_http2: true\n              namespaces:\n                own_namespace: false\n                names:\n                - default\n        - job_name: 'kube-state-metrics'\n          static_configs:\n            - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']\n        - job_name: 'node-exporter'\n          kubernetes_sd_configs:\n            - role: endpoints\n          ec2_sd_configs:\n          relabel_configs:\n            - source_labels: [ __address__ ]\n              action: keep\n              regex: '.*:9100$'\n            - action: replace\n              source_labels: [__meta_kubernetes_endpoint_node_name]\n              target_label: nodename\n        \n\n        \n\n     \n  filelog:\n    include: [ /var/log/pods/*/*/*.log ]\n    include_file_name: false\n    include_file_path: true\n    start_at: end\n    operators:\n      # Find out which format is used by kubernetes\n      - type: router\n        id: get-format\n        routes:\n          - output: parser-docker\n            expr: 'body matches \"^\\\\{\"'\n          - output: parser-crio\n            expr: 'body matches \"^[^ Z]+ \"'\n          - output: parser-containerd\n            expr: 'body matches \"^[^ Z]+Z\"'\n      # Parse CRI-O format\n      - type: regex_parser\n        id: parser-crio\n        regex:\n          '^(?P\u003ctime\u003e[^ Z]+) (?P\u003cstream\u003estdout|stderr) (?P\u003clogtag\u003e[^ ]*)\n          ?(?P\u003clog\u003e.*)$'\n        output: extract_metadata_from_filepath\n        timestamp:\n          parse_from: attributes.time\n          layout_type: gotime\n          layout: '2006-01-02T15:04:05.999999999Z07:00'\n      # Parse CRI-Containerd format\n      - type: regex_parser\n        id: parser-containerd\n        regex:\n          '^(?P\u003ctime\u003e[^ ^Z]+Z) (?P\u003cstream\u003estdout|stderr) (?P\u003clogtag\u003e[^ ]*)\n          ?(?P\u003clog\u003e.*)$'\n        output: extract_metadata_from_filepath\n        timestamp:\n          parse_from: attributes.time\n          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n      # Parse Docker format\n      - type: json_parser\n        id: parser-docker\n        output: extract_metadata_from_filepath\n        timestamp:\n          parse_from: attributes.time\n          layout: '%Y-%m-%dT%H:%M:%S.%LZ'\n      - type: move\n        from: attributes.log\n        to: body\n      # Extract metadata from file path\n      - type: regex_parser\n        id: extract_metadata_from_filepath\n        regex: '^.*\\/(?P\u003cnamespace\u003e[^_]+)_(?P\u003cpod_name\u003e[^_]+)_(?P\u003cuid\u003e[a-f0-9\\-]{36})\\/(?P\u003ccontainer_name\u003e[^\\._]+)\\/(?P\u003crestart_count\u003e\\d+)\\.log$'\n        parse_from: attributes[\"log.file.path\"]\n        cache:\n          size: 128 # default maximum amount of Pods per Node is 110\n      # Rename attributes\n      - type: move\n        from: attributes.stream\n        to: attributes[\"log.iostream\"]\n      - type: move\n        from: attributes.container_name\n        to: resource[\"k8s.container.name\"]\n      - type: move\n        from: attributes.namespace\n        to: resource[\"k8s.namespace.name\"]\n      - type: move\n        from: attributes.pod_name\n        to: resource[\"k8s.pod.name\"]\n      - type: move\n        from: attributes.restart_count\n        to: resource[\"k8s.container.restart_count\"]\n      - type: move\n        from: attributes.uid\n        to: resource[\"k8s.pod.uid\"]\n\nprocessors:\n  k8sattributes:\n  batch:\n\nexporters:\n  prometheusremotewrite:\n    endpoint: \"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-8432056a-f3e5-411e-a6ab-3c6d21b71270/api/v1/remote_write\"\n    auth:\n      authenticator: sigv4auth\n  logging:\n    loglevel: info\n  awscloudwatchlogs:\n    log_group_name: \"/aws/eks/costmonitoring/observability-amp-workspace\"\n    log_stream_name: \"$NODE_NAME\"\n    region: \"us-west-2\"\n    log_retention: 30\n    raw_log: false\nextensions:\n  sigv4auth:\n    region: \"us-west-2\"\n    service: aps\n  health_check:\n  pprof:\n    endpoint: :1888\n  zpages:\n    endpoint: :55679\nservice:\n  extensions: [pprof, zpages, health_check, sigv4auth]\n  pipelines:\n    metrics:\n      receivers: [prometheus]\n      exporters: [logging, prometheusremotewrite]\n    logs:\n      receivers: [filelog]\n      processors: [batch,k8sattributes]\n      exporters: [awscloudwatchlogs]\n  telemetry:\n    metrics:\n      address: 0.0.0.0:8888\n      level: basic\n","env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"public.ecr.aws/aws-observability/aws-otel-collector:v0.37.0","mode":"deployment","podSecurityContext":{"runAsGroup":0,"runAsUser":0},"resources":{"limits":{"cpu":"1","memory":"2Gi"},"requests":{"cpu":"1","memory":"2Gi"}},"serviceAccount":"adot-collector","volumeMounts":[{"mountPath":"/var/log/pods","name":"varlogpods","readOnly":true}],"volumes":[{"hostPath":{"path":"/var/log/pods"},"name":"varlogpods"}]}}
  creationTimestamp: "2024-03-21T20:09:51Z"
  labels:
    app.kubernetes.io/component: opentelemetry-collector
    app.kubernetes.io/instance: default.otel-collector-amp
    app.kubernetes.io/managed-by: opentelemetry-operator
    app.kubernetes.io/name: otel-collector-amp-collector
    app.kubernetes.io/part-of: opentelemetry
    app.kubernetes.io/version: v0.37.0
    aws.cdk.eks/prune-c812b288c8c9222087922b1ab3c9aba798868b58a0: ""
  name: otel-collector-amp-collector
  namespace: default
  ownerReferences:
  - apiVersion: opentelemetry.io/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: OpenTelemetryCollector
    name: otel-collector-amp
    uid: ce4b8b85-c2b5-429b-8b52-bea50e9318cf
  resourceVersion: "19639"
  uid: 100c115c-fe8a-43a5-ace6-ee2522fb9d44
